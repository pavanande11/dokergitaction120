name: Deploy Ecommerce Fullstack App on EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:   # allow manual run from GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Step 2: Debug - list files in repo
      - name: List repo files
        run: ls -R

      # Step 3: Copy files to EC2 inside ~/ecommercefullstack
      - name: Copy repo to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu   # or ubuntu if Ubuntu server
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./*"
          target: /home/ubuntu/ecommercefullstack
 

      # Step 4: SSH into EC2 and deploy with Docker Compose
      - name: Deploy on EC2 with Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu    # âœ… Amazon Linux user
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          debug: true
          script: |
            
            cd ~/ecommercefullstack

            # Install Git if missing
            if ! command -v git &> /dev/null; then
            echo "Installing Git..."
            sudo apt-get update -y
            sudo apt-get install -y git
            fi

            # Install Docker if missing
            if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            sudo apt-get update -y
            sudo apt-get install -y ca-certificates curl gnupg lsb-release

            sudo mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

            echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            sudo apt-get update -y
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

            sudo systemctl enable docker
            sudo systemctl start docker
            fi

            # Stop old containers, rebuild, and restart (with sudo)
            sudo docker compose down
            sudo docker compose up -d --build
            # Wait for MySQL to initialize
            sleep 10

            # Insert records into MySQL database
            sudo docker exec -i mysql mysql -uroot -proot ecommerce <<EOF
            INSERT INTO products (name, category, price, image_path) VALUES
            ('Gaming PC', 'computers', 1200.00, 'gaming_pc.jpeg'),
            ('Office Desktop', 'computers', 800.00, 'office_desktop.jpeg'),
            ('Mini PC', 'computers', 500.00, 'mini_pc.jpeg'),
            ('Workstation', 'computers', 2500.00, 'workstation.jpeg');
            INSERT INTO products (name, category, price, image_path) VALUES
            ('iPhone 14', 'mobiles', 999.00, 'iphone_14.jpeg'),
            ('Samsung Galaxy S23', 'mobiles', 899.00, 'samsung_galaxy_s23.jpeg'),
            ('Google Pixel 7', 'mobiles', 799.00, 'google_pixel_7.jpeg'),
            ('OnePlus 11', 'mobiles', 749.00, 'oneplus_11.jpeg');
            INSERT INTO products (name, category, price, image_path) VALUES
            ('MacBook Air', 'laptops', 1099.00, 'macbook_air.jpeg'),
            ('Dell XPS 15', 'laptops', 1299.00, 'dell_xps_15.jpeg'),
            ('Lenovo ThinkPad', 'laptops', 999.00, 'lenovo_thinkpad.jpeg'),
            ('HP Spectre x360', 'laptops', 1199.00, 'hp_spectre_x360.jpeg');
            INSERT INTO products (name, category, price, image_path) VALUES
            ('SanDisk 64GB', 'pendrives', 15.00, 'sandisk_64gb.jpeg'),
            ('Kingston 128GB', 'pendrives', 25.00, 'kingston_128gb.jpeg'),
            ('Sony 256GB', 'pendrives', 50.00, 'sony_256gb.jpeg'),
            ('Samsung 512GB', 'pendrives', 80.00, 'samsung_512gb.jpeg');
            EOF
